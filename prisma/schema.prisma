// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  Mahasiswa
  Dosen
  Admin
}

enum StatusAbsensi {
  Hadir
  TidakHadir
  Izin
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String
  role         Role
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  mahasiswa    Mahasiswa?
  dosen        Dosen?
}

model Mahasiswa {
  id        String      @id @default(uuid())
  nim       String      @unique
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String      @unique
  class     Class       @relation(fields: [classId], references: [id])
  classId   String
  absensi   Absensi[]
}

model Class {
  id         String      @id @default(uuid())
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  mahasiswa  Mahasiswa[]
  jadwalKelas JadwalKelas[]
}

model Dosen {
  id         String         @id @default(uuid())
  user       User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String         @unique
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  jadwalKelas JadwalKelas[]
  mataKuliah DosenMataKuliah[]
}

model MataKuliah {
  id          String         @id @default(uuid())
  name        String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  absensi     Absensi[]
  jadwalKelas JadwalKelas[]
  dosen       DosenMataKuliah[]
}

model Absensi {
  id           String      @id @default(uuid())
  mahasiswa    Mahasiswa   @relation(fields: [mahasiswaId], references: [id], onDelete: Cascade)
  mahasiswaId  String
  mataKuliah   MataKuliah  @relation(fields: [mataKuliahId], references: [id])
  mataKuliahId String
  date         DateTime    @default(now())
  status       StatusAbsensi
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model JadwalKelas {
  id           String      @id @default(uuid())
  class        Class       @relation(fields: [classId], references: [id])
  classId      String
  mataKuliah   MataKuliah  @relation(fields: [mataKuliahId], references: [id])
  mataKuliahId String
  dosen        Dosen       @relation(fields: [dosenId], references: [id])
  dosenId      String
  dayOfWeek    String
  startTime    DateTime
  endTime      DateTime
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Semester {
  id        String    @id @default(uuid())
  name      String
  startDate DateTime
  endDate   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model DosenMataKuliah {
  dosen        Dosen      @relation(fields: [dosenId], references: [id])
  dosenId      String
  mataKuliah   MataKuliah @relation(fields: [mataKuliahId], references: [id])
  mataKuliahId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([dosenId, mataKuliahId]) // Composite key
}
